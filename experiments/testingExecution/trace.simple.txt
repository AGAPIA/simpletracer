bbp -> [offset = {0x000ef4}  , modName = {libfmi.so}] cost ->[6] , jumpType -> [0] , jumpInstruction -> [3], esp -> [0x2942f21c] , nInstructions -> [0x000006], bbpNextSize -> [0x000002], nextBasicBlockPointer -> [offset = {0x000da0}  , modname = {libfmi.so}], 
 test - 29914da9 
 z3_code -> 
   
(set-info :status sat)
(declare-fun jump_symbol () (_ BitVec 1))
(declare-fun |s[0]| () (_ BitVec 8))
(assert
 (= (ite (= |s[0]| (_ bv65 8)) (_ bv1 1) (_ bv0 1)) jump_symbol))
(check-sat)
 
bbp -> [offset = {0x000da0}  , modName = {libfmi.so}] cost ->[4] , jumpType -> [0] , jumpInstruction -> [2], esp -> [0x2942f21c] , nInstructions -> [0x000004], bbpNextSize -> [0x000002], nextBasicBlockPointer -> [offset = {0x000dd0}  , modname = {libfmi.so}], 
 test - 29914dad 
 z3_code -> 
   
(set-info :status sat)
(declare-fun jump_symbol () (_ BitVec 1))
(declare-fun |s[0]| () (_ BitVec 8))
(assert
 (= (ite (= |s[0]| (_ bv66 8)) (_ bv1 1) (_ bv0 1)) jump_symbol))
(check-sat)
 
bbp -> [offset = {0x000dab}  , modName = {libfmi.so}] cost ->[2] , jumpType -> [0] , jumpInstruction -> [2], esp -> [0x2942f21c] , nInstructions -> [0x000002], bbpNextSize -> [0x000002], nextBasicBlockPointer -> [offset = {0x000de1}  , modname = {libfmi.so}], 
 test - 29914db3 
 z3_code -> 
   
(set-info :status sat)
(declare-fun jump_symbol () (_ BitVec 1))
(declare-fun |s[1]| () (_ BitVec 8))
(assert
 (= (ite (= |s[1]| (_ bv67 8)) (_ bv1 1) (_ bv0 1)) jump_symbol))
(check-sat)
 
